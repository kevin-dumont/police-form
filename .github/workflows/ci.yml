name: "CI/CD Workflow"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  pull-requests: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Lint
        run: yarn lint

      - name: Test api
        run: yarn api:test

      - name: Test web
        run: yarn web:test

  deploy-front-prod:
    needs:
      - ci
    runs-on: ubuntu-latest
    environment: prod
    env:
      NODE_ENV: ${{ vars.NODE_ENV }}
      TF_VAR_AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VAR_API_KEY: ${{ vars.API_KEY }}
      TF_VAR_WEB_BUCKET_NAME: ${{ vars.WEB_BUCKET_NAME }}
      VITE_API_URI: ${{ vars.API_URI }}
      VITE_API_KEY: ${{ vars.API_KEY }}
      WEB_BUCKET_NAME: ${{ vars.WEB_BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::272649283154:role/GitHubAction-AssumeRoleWithAction
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build web
        run: yarn web:build
        shell: bash

      - name: Deploy Web
        run: yarn web:s3:sync

  deploy-backend-prod:
    needs:
      - ci
    runs-on: ubuntu-latest
    environment: prod
    env:
      NODE_ENV: ${{ vars.NODE_ENV }}
      TF_VAR_AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VAR_API_KEY: ${{ vars.API_KEY }}
      TF_VAR_WEB_BUCKET_NAME: ${{ vars.WEB_BUCKET_NAME }}
      VITE_API_URI: ${{ vars.API_URI }}
      VITE_API_KEY: ${{ vars.API_KEY }}
      WEB_BUCKET_NAME: ${{ vars.WEB_BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::272649283154:role/GitHubAction-AssumeRoleWithAction
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build api
        run: yarn api:build

      - name: Zip build
        run: yarn api:zip

      - name: Sync lambda
        run: yarn api:s3:sync

      - name: Build swagger
        run: yarn api:swagger:build

      - name: Terraform Init
        run: yarn tf:init

      - name: Terraform Validate
        run: yarn tf:validate

      - name: Terraform Plan
        run: yarn tf:plan
        shell: bash

      - name: Terraform Apply
        run: yarn tf:apply
        shell: bash
