name: "CI/CD Workflow"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  pull-requests: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      web: ${{ steps.filter.outputs.web }}
      infra: ${{ steps.filter.outputs.infra }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Paths Changes Filter
        uses: dorny/paths-filter@v2.11.1
        id: filter
        with:
          filters: |
            api:
              - 'packages/api/**'
              - 'package.json'
              - 'yarn.lock'
            web:
              - 'packages/web/**'
              - 'package.json'
              - 'yarn.lock'
            infra:
              - 'infrastructure/**'
              - 'packages/**/*/infrastructure'
            ci:
              - '.github/workflows/ci.yml'
  test:
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' || needs.changes.outputs.web == 'true' || needs.changes.outputs.infra == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: ${{ needs.changes.outputs.web == 'true' || needs.changes.outputs.api == 'true'  }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
        if: ${{ needs.changes.outputs.web == 'true' || needs.changes.outputs.api == 'true'  }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline
        if: ${{ needs.changes.outputs.web == 'true' || needs.changes.outputs.api == 'true'  }}

      - name: Test api
        run: yarn api:test
        if: ${{ needs.changes.outputs.api == 'true' }}

      - name: Test web
        run: yarn web:test
        if: ${{ needs.changes.outputs.web == 'true' }}

  build:
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.api == 'true' || needs.changes.outputs.web == 'true' || needs.changes.outputs.infra == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build web
        run: yarn web:build
        shell: bash
        if: ${{ needs.changes.outputs.web == 'true' }}

      - name: Build api
        run: yarn api:build
        if: ${{ needs.changes.outputs.api == 'true' || needs.changes.outputs.infra == 'true' }}

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: packages/**/*/build
          key: ${{ runner.os }}-build-${{ github.sha }}

  deploy:
    needs:
      - changes
      - test
      - build
    runs-on: ubuntu-latest
    if: needs.changes.outputs.infra == 'true' || needs.changes.outputs.web == 'true' || needs.changes.outputs.api == 'true'
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      WEB_BUCKET_NAME: ${{ vars.WEB_BUCKET_NAME }}
      WEB_API_KEY: ${{ vars.WEB_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
        if: needs.changes.outputs.infra == 'true'  || needs.changes.outputs.api == 'true'

      - name: Restore cached build
        uses: actions/cache@v3
        with:
          path: packages/**/*/build
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::272649283154:role/GitHubAction-AssumeRoleWithAction
          aws-region: eu-west-1

      - name: Build swagger
        run: yarn swagger:buid
        if: needs.changes.outputs.infra == 'true'|| needs.changes.outputs.api == 'true'

      - name: Terraform Init
        run: yarn tf:init
        if: needs.changes.outputs.infra == 'true'|| needs.changes.outputs.api == 'true'

      - name: Terraform Validate
        run: yarn tf:validate
        if: needs.changes.outputs.infra == 'true'|| needs.changes.outputs.api == 'true'

      - name: Terraform Plan
        run: yarn tf:plan
        shell: bash
        if: (needs.changes.outputs.infra == 'true' || needs.changes.outputs.api == 'true') && github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Terraform Apply
        run: yarn tf:apply
        shell: bash
        if: (needs.changes.outputs.infra == 'true' || needs.changes.outputs.api == 'true') && github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Deploy Web
        run: aws s3 sync ./packages/web/build s3://${{ vars.WEB_BUCKET_NAME }} --delete
        if: needs.changes.outputs.web == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
